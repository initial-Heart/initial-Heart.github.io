<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java-ArrayList应用</title>
    <url>/2022/04/13/Java-ArrayList%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<p><strong><a href="http://www.mamicode.com/info-detail-2615192.html">ArrayList</a>详细介绍</strong></p>
<h4 id="学生管理系统"><a href="#学生管理系统" class="headerlink" title="学生管理系统"></a><strong>学生管理系统</strong></h4><span id="more"></span>

<p>建立一个Student的类，再类中加入姓名，性别，学号…..信息，同时加入构造函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"><span class="keyword">private</span> String num;</span><br></pre></td></tr></table></figure>

<p>新建一个集合，Student类型的集合：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList&lt;Student&gt; arr = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br></pre></td></tr></table></figure>



<h5 id="项目演示"><a href="#项目演示" class="headerlink" title="项目演示"></a>项目演示</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">----------欢迎来到学生管理系统--------------</span><br><span class="line"></span><br><span class="line">1 添加学生</span><br><span class="line"></span><br><span class="line">2 删除学生</span><br><span class="line"></span><br><span class="line">3 修改学生</span><br><span class="line"></span><br><span class="line">4 查看所有学生</span><br><span class="line"></span><br><span class="line">5 退出</span><br><span class="line"></span><br><span class="line">请输出你的选择：</span><br></pre></td></tr></table></figure>

<p><strong>该页面代码：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (n != <span class="number">5</span>) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;---------欢迎来到学生管理系统---------&quot;</span>);</span><br><span class="line">           System.out.println(<span class="string">&quot;1 添加学生&quot;</span>);</span><br><span class="line">           System.out.println(<span class="string">&quot;2 删除学生&quot;</span>);</span><br><span class="line">           System.out.println(<span class="string">&quot;3 修改学生&quot;</span>);</span><br><span class="line">           System.out.println(<span class="string">&quot;4 查看所有学生&quot;</span>);</span><br><span class="line">           System.out.println(<span class="string">&quot;5 退出&quot;</span>);</span><br><span class="line">           System.out.println(<span class="string">&quot;请输入你的选择：&quot;</span>);</span><br><span class="line">           n = sc.nextInt();</span><br><span class="line">           <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">               addStudent(arr);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>) &#123;</span><br><span class="line">               deleteStudent(arr);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">3</span>) &#123;</span><br><span class="line">               changeStudent(arr);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">               checkStudent(arr);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;再见！&quot;</span>);</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;请重新输入选择！&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<h5 id="添加学生的方法："><a href="#添加学生的方法：" class="headerlink" title="添加学生的方法："></a><strong>添加学生的方法：</strong></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStudent</span><span class="params">(ArrayList&lt;Student&gt; arr)</span> &#123;</span><br><span class="line">        <span class="comment">//录入学生信息</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生学号：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">num</span> <span class="operator">=</span> sc.nextLine();</span><br></pre></td></tr></table></figure>

<p>为了避免输出重复的学号，对学号进行一个判断，重复则添加失败</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//判断是否学号重复</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.size(); i++) &#123;</span><br><span class="line">    <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> arr.get(i);</span><br><span class="line">    <span class="keyword">if</span> (num.equals(s.getNum())) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;学号重复，添加失败！&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;请输入学生姓名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生年龄：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">​        <span class="comment">//创建学生对象</span></span><br><span class="line">​        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">​        s.setAge(age);</span><br><span class="line">​        s.setNum(num);</span><br><span class="line">​        s.setName(name);</span><br><span class="line">​    </span><br><span class="line">​        <span class="comment">//放到集合中</span></span><br><span class="line">​        arr.add(s);</span><br><span class="line">​        System.out.println(<span class="string">&quot;添加完成！&quot;</span>);</span><br><span class="line">​    &#125;</span><br></pre></td></tr></table></figure>

<h5 id="删除学生方法"><a href="#删除学生方法" class="headerlink" title="删除学生方法"></a><strong>删除学生方法</strong></h5><p>注意判断，在删除前先进行有无信息的判断</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (arr.size() == <span class="number">0</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;无信息，请先添加再删除！&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteStudent</span><span class="params">(ArrayList&lt;Student&gt; arr)</span> &#123;</span><br><span class="line">        <span class="comment">//先判断集合中是否有信息</span></span><br><span class="line">        <span class="keyword">if</span> (arr.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;无信息，请先添加再删除！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入要删除的学生的学号：&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">num</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.size(); i++) &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> arr.get(i);</span><br><span class="line">            <span class="keyword">if</span> (num.equals(s.getNum())) &#123;</span><br><span class="line">                arr.remove(i);</span><br><span class="line">                System.out.println(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;该信息不存在，删除失败！&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h5 id="修改学生方法"><a href="#修改学生方法" class="headerlink" title="修改学生方法"></a><strong>修改学生方法</strong></h5><p>注意修改前的判断和修改时的判断</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">changeStudent</span><span class="params">(ArrayList&lt;Student&gt; arr)</span> &#123;</span><br><span class="line">        <span class="comment">//先判断有无数据</span></span><br><span class="line">        <span class="keyword">if</span> (arr.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;无信息，请先添加信息！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入要修改的学生的学号：&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">num</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.size(); i++) &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> arr.get(i);</span><br><span class="line">            <span class="keyword">if</span> (num.equals(s.getNum())) &#123;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入新的学生姓名：&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入新的学生的年龄：&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">    </span><br><span class="line">                s.setName(name);</span><br><span class="line">                s.setAge(age);</span><br><span class="line">    </span><br><span class="line">                System.out.println(<span class="string">&quot;修改成功！&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;该信息不存在，修改失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="查看所有学生的方法"><a href="#查看所有学生的方法" class="headerlink" title="查看所有学生的方法"></a><strong>查看所有学生的方法</strong></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//判断集合中是否有数据</span></span><br><span class="line">        <span class="keyword">if</span> (arr.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;无信息，请先添加信息！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;     <span class="comment">//为了让程序不再执行</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;学号\t\t姓名\t\t年龄&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.size(); i++) &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> arr.get(i);</span><br><span class="line">            System.out.println(s.getNum() + <span class="string">&quot;\t\t&quot;</span> + s.getName() + <span class="string">&quot;\t\t&quot;</span> + s.getAge());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>



<h5 id="Student-java"><a href="#Student-java" class="headerlink" title="Student.java"></a><strong>Student.java</strong></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ArrayList.Test01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String num;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNum</span><span class="params">(String num)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getNum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>ArralList</tag>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>JiCheng-1</title>
    <url>/2022/04/14/JiCheng-1/</url>
    <content><![CDATA[<h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a><strong>继承</strong></h1><h3 id="什么是继承？"><a href="#什么是继承？" class="headerlink" title="什么是继承？"></a>什么是继承？</h3><p>多个类中存在相同属性和行为时，将这些内容抽取到单独一个类中，那么多个类无需再定义这些属性和行为，只要继承那个类即可。</p>
<p>多个类可以称为<strong>子类</strong>，单独这个类称为<strong>父类</strong>、<strong>超类</strong>或者<strong>基类</strong>。</p>
<p>子类可以直接访问父类中的<strong>非私有</strong>的属性和行为。</p>
<p>通过 <strong>extends</strong> 关键字让类与类之间产生继承关系。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Zi</span> <span class="keyword">extends</span> <span class="title class_">Fu</span>&#123;&#125;    <span class="comment">//Zi是子类，Fu是父类</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="继承的特点"><a href="#继承的特点" class="headerlink" title="继承的特点*"></a><em>继承的特点</em>*</h3><p>1.Java只支持<strong>单继承</strong>，不支持<strong>多继承</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//一个类只能有一个父类，不可以有多个父类。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubDemo</span> <span class="keyword">extends</span> <span class="title class_">Demo</span>&#123;&#125; <span class="comment">//ok</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubDemo</span> <span class="keyword">extends</span> <span class="title class_">Demo1</span>,Demo2...<span class="comment">//error</span></span><br></pre></td></tr></table></figure>

<p>2.Java支持多层（重）继承(继承体系)。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="super和this有什么区别"><a href="#super和this有什么区别" class="headerlink" title="super和this有什么区别?"></a>super和this有什么区别?</h3><p>*<strong>super*<strong>是一个关键字，代表父类的</strong>存储空间标识</strong>。(可以理解为父亲的引用)</p>
<p>super和this的用法相似。</p>
<p>this代表<strong>对象的引用</strong>(谁调用就代表谁)；<br> super代表<strong>当前子类</strong>对<strong>父类</strong>的引用。</p>
<p><strong>使用场景</strong></p>
<ul>
<li>当子父类出现同名成员时，可以用super进行区分；</li>
<li>子类要调用父类构造函数时，可以使用super语句。</li>
</ul>
<p><strong>区别</strong></p>
<p>1.成员变量</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>.变量    --    本类的</span><br><span class="line"><span class="built_in">super</span>.变量    --    父类的</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> show&#123;</span><br><span class="line">	<span class="comment">//访问本类中的成员变量age</span></span><br><span class="line">    sout(<span class="built_in">this</span>.age);</span><br><span class="line">    <span class="comment">//访问父类中的成员变量age</span></span><br><span class="line">    sout(<span class="built_in">super</span>.age);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.构造方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>(...)    --    本类的</span><br><span class="line"><span class="built_in">super</span>(...)    --    父类的</span><br></pre></td></tr></table></figure>

<p>3.成员方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>.方法名()    --    本类的    </span><br><span class="line"><span class="built_in">super</span>.方法名()    --    父类的</span><br></pre></td></tr></table></figure>

<p>super();和this();都是在构造函数的第一行，不能同时出现。</p>
<h4 id="什么时候使用继承？"><a href="#什么时候使用继承？" class="headerlink" title="什么时候使用继承？"></a><strong>什么时候使用继承？</strong></h4><p>继承体现的关系： <strong>is  a</strong></p>
<p>举例：苹果和水果，猫和动物</p>
<h4 id="继承中变量的访问特点"><a href="#继承中变量的访问特点" class="headerlink" title="继承中变量的访问特点"></a>继承中变量的访问特点</h4><p>在子类方法中访问一个变量：</p>
<p><strong>局部范围&gt;成员范围&gt;父类</strong></p>
<h4 id="继承中构造方法的访问特点"><a href="#继承中构造方法的访问特点" class="headerlink" title="继承中构造方法的访问特点"></a>继承中构造方法的访问特点</h4><p>子类中所有的构造方法默认都会访问父类中的无参的构造方法：</p>
<p>○子类会继承父类中的数据，可能还会使用父类的数据，所以<strong>子类初始化之前，一定要先对父类初始化</strong></p>
<p>○每一个子类构造方法的第一条语句默认都是：<strong>super()</strong></p>
<p>如果父类中没有无参构造方法，只有带参构造方法，该怎么办？</p>
<p>○通过使用super关键字去显示的调用父类中的带参构造方法</p>
<p>○<strong>在父类中自己主动写一个无参构造方法</strong></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>继承</tag>
      </tags>
  </entry>
  <entry>
    <title>PrivateTest</title>
    <url>/2022/04/15/PrivateTest/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d839271daec60d6f88af1b160556bf9605e1ca06c049b56b198e1c11fc245c2b">0dc20ea72bc4ed05248d2d3cd853d1a583aaf8d379fb8ecc4c456427b6ba711cfbf065705f082dd2d857c469348f8931d643cc73f92a7d6665e4b2b5a903f4e5e4b9852d19ce94ac5e0a0a398896097c135c4f529db0fddffbdf3668307b7ac10611ccc58f10ad469b8bdfed640361950855428e72f49b9ad6dca7124abe11033259e0cbfd7496610c184b8308871d3646c4d3ef11613362de5f301fab839183a3e18cfec745ae223954fd48269c42ddbfb15bacbabc81caa9cb191ac232f43006eb79655323319da67c29514b18de2e7c04bb50d77b3215e1e9a7320bd97bea814cf8dc8b6942de3b7d1bbc742dd925aab09aafdc9ace85311fa6d5102b0f38b305b1ed25dd1fdb09a26fe0f3bd130b1a356fce15da5a7e9982164410bc3d3a1beadde609d03cdafcb486ba2cd805ee4e0dfee3e0bdff875a67bdbec9cf95e8cac36bd5f480b0c8420a0c60a245c2a740c088f997564402083d75e8b4d1fada9b7920f3d3d8bfe651aae9c1d2e1237d91dd2a1127d007ee739d44301726ccb15eb455b65229fa6f83b4c61b91ba00d686794728bde6a918d8027736725c1048f2adef1b287e2bf754966f2937f612f0e5558164c3d4be8d898fcc4b4faea790deda77d0b6a838f1d527c8c661c5ebe81b212ac9d4d2aa3773f8807da8a9998a373fa5dbfa588a8ede49bf2cc04b93f35eb6e8ab3691b91f5e0b0935b6ff0227a342db20e2b464f9720827809ac039b3ce874f148c57508afd0525385cefd6738777814d8a261829944a5264d8283bb83a4131a918f8c65afec82651d2aff6b84e6e00b7d6fb721a16508f936348e02bafde0b16440bbcde1ed9160de34e07a3004444d8b9e9d27e0b56ae230ec4c8660bd0fbafebc39b14052cccf27145bfb206fd2ed7e9a5e65db69824bdb9da3522ef6104bfb219c0852287835123d48524548f499ad0242216878bb8c2787175b2265962e2e2467c6a903790cac38c89ab467877306eea9adae6e9e19b4ba975b2bcd8a0a439d0aacfbfdb3c0bb700683ec90f54f7700b0208dbac9ef57f3bb317c0c5bd91068fe33bbf9119385b3962fe7a57302382d33fee3f67d09726a54dde562a868cba013991582cd86f0a847b44d6771fd1a9068ad1e637e122454aaa5a3e14cdd2e20a4b4450d069e58ef6c8971cd1d2ca4c7a33a22d14524eb61d3776a8388ab9ae1ba17b269fe6afdda3cc279ce20953329a53536cd09ff2fa51b517fb1640e77e925e00d6ae80a549de6b439a7cc3c9cfe2ce6c59a7181a117a3a8163ad4e68e46f585192c43a4cd67d1d2a5c54a5d613ce4a6762ea0ed00cfc1df807e886642bd796706676d5e292002007b8ae33628d924513d05c06fe84e1f08a0a4f7b3db5ed19ecf7bcfbb7a9ac24afab1e572e24e1dc8208d5084f0bdd88e5d8240b027f81c8caae380f2eb040959e801c60e600a77503e308762db220b9c44929f033cbe0fed64af6ebe5d84e0b012383f4f8f46630f1b1a0f023e518a10ac9ee224ff002f89419aec5eb90acae691b633584721d59301103c04bbb46a9162654b0bc2ccf3c0dd4e50cf85ff8eae707a72947413618005aecafca4bee7ff581358733358a7800a3fb8cde0c7f9d29cdfdc935b18217d6461f8cc7459ac688ae5b893f9f5fd2922fec64c65b26fcf804a359748789299f93c49970d0eb539dbb240527baeddf648944b0a19cf982ec5ae31b6f19f50517e35d897c9aed67ed2999f316bff06df678ede50ccc91da0b23d9450ad154dae38e927616dd9640d59bb95b915e8684468e6593842c06c1d6e6b2f8cac8f805a1b1b970d3ea6f28753f096b94ecc223b73c346b7294b246008f6a4497664697c3552ad9ad01f642b4bf754c379f2eaad24bda10ba7be62f5cf225d2d3922bda2a2163a16e7919a81a39ea68146e28a1c6286e532ff2b3abd3c30294c5c82039552f42813a5ea81cadccb0bdfa9112b2fa1d593cc249c7266b310f030ea971558d41375f1d2663a1dceb05d6c97de1b73e2d73cf8e1575dfc849b74c46505a6ee0c804ce9e70086e9ca351f2034154190f87ff93ab89acd9709aeeb45c1587457133862aaab595c901f65be7dee752f11c3cb9d079ffbab4b81b8b90bb6e9bbaf77c564fb07fa5db96bacbed092a4ad8c6e11323d24717645b266d0fc0183dcfb85523eea80e6a3498bbbe7ef56ec312a961e1b6cf1c6699183603e01f961004bb4af688d0542994c795287ee3a1d56c732079abd84aeb7d47bfcca75fc37fe87bd7c77eeea4a22c5887972c5bf582f82c6566d54f1e3f29c152d3ffb1e2c2faec1f81417757af862d91d964b6ba50730ebd3a2f11f723977d872d5e4b52b5c1c1f7f5fc62039e237ea8948b61fb1bb10c08490bee0328aa0b0d1654e4490106e13d0ed739b865aaea432898855ca3a89723e08abdc001ed788c71fc8a3210c149a3988baa2a573ac96a9766ac720d1ceb003bc92112619eb32444f5fb8bc0d5bc2d95a777514b71345542493c60d02ec3cd9a37db67d721a7f208ce3aea594f9ba69b7b429a824eb626c7d18f01215ac65810aadf0be48600a4d6447233a1c9df074b13cea46089d36d468a2d6054d13b17c7bf9100130cd6c9725060c8013bbf86ad5ccd756d65155ae736ad57985b7bbb7a671eba9fd3a091eb5783b01075d694b8e5d5a26dc8d2a060ad0a066c5b457a6bad267e9102ccac49c0a6605300681792d08e7155bd2a5e9bf9aa4cf36ab1eb7ea4af740176185b2b7b52082454b701f6019ffc7c5bbccda88a21593d9cddf28a03e59b1c17f75928883ffff3d2526e53936ce89ac14f73a70c590f072938c17a8fe96a960b7e5a900e6c864b2460965920df8cea8bc8893b859980733e67d10f67b43f281184cc20a37a87e48a1a45f9460f88cec4281aa561431cc0d42e0bf15d08a6fd1cc9f26eea10b6cf490f49c717855845f3cb6ebd8a242de3b227b0fe7950e8b8c18160eca37320203740ad7b4e3abc1527cc93d807adf1c0aa30e4c1e95c25a5366b7e8c605b1dc5a414ed43ed95d3a35a4e6c4ffe4def6fcac578f3b555e5dc05e615f4b489a24d11a05198b9d34bc8214816cb3b7676116b21987c714cbf08a214f9c4b1bff363071aa0f6b0329651ed92d88fae9ee1f24049ef54197062af32d9482cecb3ce96e57ac61743fc8866f53d9838f24c74229c05b6795fc3bc68272f1954490185f02fcf02bf6ac6f6618f86faa845cd7c319708eaaaf4b910721bd9f4cef3f122f9466fb8a600ac883dd3956424065abcbd3ed3e952c1264d436da8cf64f7cef58027821c2bebf06c25145b3adf488133484f0e9f7294078e97d4df92d429023f6fbcf9c49d7122eaf7bfe5becfee5439145110eeb4ab80e23818d09b510a2b14bfb7e9ecfd274a31c916339315a370867a2446f4b1b870bc19a40351515d32dc2fa30450417b561c987241d327cc7a0889c086c3f4ef4027ad7743b59744c72e32c0f3a563732a860c588a9bc4e42996cd7766c553c4d924d39a79ed9df6be583870efdb1fee10a386f44aefce1143d2b3fdade96aefbc4d4840f4877fe89317c678d6994a7a7d04fd035756bfe1fb67927573e266710477614a81b03b9ca88c4d30a1db5e241af796c54322481c024a7ab89e71a47266f456d636caaacbd1fd92b0faa0d36007939e902651815dd8900dcda94d069414cb2a351232895e7d029bfe39aac80e725fce9f5e4aa6bfc37bbd1d11725bb6dc7888a4307f23bfdee8440f70dc006b148100006e992740d71317749085b7e7dbb91980d4aab59943ba3d76ffb08cbaa4c325c5d9664a074bc9f062281d37a5055a92d67da655ac367441ff8dc0b342b987e9f194e471566308fd311cfdf9506afa340439ed79d3d422d35d9c78f640fd39b8914a4d0d9b4fbd940100507ad9ed1cbcb9d74ac8c65757bb1a5b21ddfd8074cdc7d41a36e72cff71180d8487c9283e98af266fcf1a5418cb176d170dcfed29b55f0e01e436096edb5e158bdb89eece9fd51164ad6e010a8cb65ca2d9cb75d456d97528aebe733071565406661389b4467316f9728054ed19bd5df81fe83f52e675f7c7db1f3b9c4f8722820f38391125319e2cb50ca5c117ee0d43ac0478be9f39cbc724006665946253e9e9637f394e210ca3899d7ab9988048411a63b579495753867042711409a0ce4bf82e416f127fdc486dcb193c2a4e5aa09e9192e016752781ec72194fdfb8bcc78a7c4e5afe872a11a6b9b1c3968e91959240a708c77276450c2881cc67b35c88d51d16261215eb830e52b8e6db73f72f1719ee43c5d5cc0d0a97fb054eab950caa4ae0c93aa837a2611b0bfa13c8e936b0cd6056f4b65a4d005fc273c0aed469731849085bb237e619f6ab0dd87fbe52968c20c51fb4aa331ccaf91f21b75c9b4fb15517ae2acb85b4b78a15f65f39c7043e1be9fb1267c47087088accda4f0a73af5d217a6ea9d1bbb7e6829858ee096054afb2bf4fa02ea3bd524d06c97ebf7c61ddc4aa2926fd46a728235eb0a3ee14b32a25a098cdeef5f77569a05c1542921101d81caefa1f4a1f77b5d0fd681659c256dc316a7fc2c5c946d734055214d42de99821204a1e219eda0e123aa036126c848ad445714e5168d056ec81ba7db8f10d7ecb069fc9a95dbcb0fc25b54ac820ca9828a44aef9b2f4b6ca43a5b6c02d1e7a34e6e7182effa756632c60785b29528b3a4d9bbcd2f62a63be7af92e8147d7561b3272bb68f632bdb568e38339bf5cc387913d6e43c1aefcb12711aa4071a6505a7d6e2b1e8fba08fece49065e3d6523ffc596414faaa5f22305489bd2a3d245015254ed253a0d5b44ab972ecff84a69cafc66a38616491e9634789f22cd2e690a6e395c95d0ccbc05792173c2d5f1862b364ee49b6fe3ac7177ce54547df3cb40cc98e0a12c5b1f3999ba284e8d93119852100d545d4f0e0634f34338a7af0c2ac92ff851ec6e8e70f97a423f3375284cbf17cfa55d5534033c168915e1f164821e7a700b75eed40f7ebf458b85f747393627321147b786e36b304f46b2233c029dfff5f2c670895d692fcd6e55d57cfb22b4a9babf757880d0ed64fe5f4fece00a1e402baa7cdc3ccb4db34fbaf80e7bf269e53f83b9b2b2df2207f0237d0103d600005d9b9d128c8feaab332a3cd6b9e48ac4d7f49a39a14d05f43a772c209cde3156947887f48f9dfec1967353dcebe99781e252595a0af991b29fd09cb4c385d816e593a9564fc2c70abf393a0e70b217693b4526bfc10540d8b27163e553b0cc0e058d3f15ee26ede40d6b99704746f7c8456b50f289748107439625501ac82a8116c46e87ba0f43b86ff0a7035d8cd3020cd28390976bc900ec741c3deea105a2e5c9c7312e7c7d9b6f23d2bdf508b95a51cd5a9c224ca8d30b4db783af4a836b08129b8a8155fcecf52a920deb888e71dd6212760b3860e0d25bb64189686f1e437bfdc919c32e70230d0b28e79e6bda034c93af7bbbc053a25a8c0b2b090d46f306a14e2f9ee860bbe3a15b195c24c4866874e09e8a6ecc59b8e8ead3bf290428d55e15e4fa0ddcf421ff58075dff0ac09652f32ef70a7c8f70a38cc76ef5172d3270e2ae4544c0a22f7aea998daeba60e83c42ab802af45bf8a6a46499a91be51f6abed2d4a77627c33193f7119ed0a5949d8627202c552d28a77f31dc0324fdad8c74e6b23576d01f702d1b866d94c74d2e8aed0d3d360c022af5a0974e34d8ce891e501acd48b78cdd29519262c4d6ba45f42b8e883a0eeaf852a91bc85b6ab80ef376bd2ee21c862d43b35f2725f482112ee8b968ad16f4338f7ef87b3e78a2dea94839c8e2b74f48463d6360477a83ed3bb97b7d8b4f40ba24f789830d9806e19e378b115c4d90ec6923f1e52449a4baf110ad895eea01dd772437c9557aec8350f7102ed450027464965d055178841d7c66830f48aa1d432688ef8e2c078e75a1205556ab6758ca39df0909742b7e45ee644d4a61aba09fa5255b9d84c8d6e5394d85da6e0d68428263ac48d4066d1bc15e4248ea2108c4ab7a1f8865538bd7f589ba030f6b879c8ccab4f550427dc6718f1df5bb2562df52a1f3fd135e08a4d945925f6200e7e7032dc015fc9d173c6110e7a41fc63997a0149da26601eb5b1631697ebd5b0fc38ef34d8ec63be1aed0278a6670715797e2c066d449c9323bf4c49ab084f41523f2b97c44b30a0286a13ff02500f4e08a1ca8d4f9625c08e476af630055ef530cf45fc50b0cb09ada60d1ae446b536594922217836c679b7f06ebe0efa8bfd425fa77f61f5208ad355f7838eb9f24d0b002c453e32398d999c788e8a047e688ff5499f9ff19644f7a0b950185c3688608d24ee0404940905edf467f245bfc29fb7a58c6be2037d8bd64130e1cad87e75361c11ca922027a175eaf6c3c8271598b1957da253e0d5220e095e00c397624952dc83af34051ff9ce6c72b6166b9f2cfcfa3cd87c94688e64c065df9663137495d36e4a58798028e73005bcf8db4fb5b8013cd235da96d2f8c3beeb03bcbae43d186734d90e366afa30c1b1f58a286e50623b7d502480975aee968e2f4414c1dfab45d83c6952ba35906bc7b6689a98e43e961d91cada5f60913641f5a2becda8f23c2f3a65ea9f0ad617ea6f4b4fd782bb981c7c1e6e68ccf5af010805f5c842f9f829b87538255f1f883d51e55914e5fc1bd28c6dbd0ac7901e0ed0019f2c7ba35d7e9b6db6adb817ff3cb77667e3124ba0bd6c67d6487ce05ac4cc08dd989082a69175ba69368c95d38ce72155df535382916be6acc9f63b55914c0d185e4f5e01396e06a68a8c9487d36cc4344f82457c9d22b0a4c37d6f2566ca7b31b1257cc1ae771d7599f005bbb3ff7c231deab93707d2c535b6e84405302dc969c2a912feaae6b5f0c6714a53dec3b5af343220c06e1cc5520f41a0816ae8d5db59ecb4b130566767eed4f2c68a52d2fd7eaf7564a23f7a9fc27102435da440a99827da32d1b4948340a6719b1b2684a2d0d7255e3ac466a199206d7dd95b2baf557fce78ebaba63397b3d23ad23408be9f0c514c7989ae11e4cf32f88f7f2503050af82bdf708b5233e576e35c60b573b9139c03cbaad66aad51cb55e4475d42d4063c557e02d6b49d1248018ea25951f7a52f3ccd56cbbac7b4659edc395976886ebc5ed00df48bd9b2be3fa23db1dc4965edf486e08f954e86e5adc851e30e0961c96a3293d871383e46dbc1b174203f6a046786754c6d692f43ba00335f0118eb1be2da288f3e340df2aa499d8faef73dba8722d6ac333e1e40a72ac7ee3c777c8ea6de4e171fe89229613554b12a6dd5d65651473434d1d242f420aa8ecb3a0559bc8a4290eaf40c42748bc0b7708706b01ae99eff2a13eb90c6bc2b03b0de14d299eb1a573489b3923762d6f740bdef60923577d607dee522f800d6c8f0de9a500223f668d1bcb82dbb8ee83e3a5fc398d8c63287a1b0c5a4e7e81fc33f465551ff4d35f3ca487f98698a821cf26cd760545c91876b536734aeea383ce3f340db2e128741a03eee7ef320a617256c90dffab26a7eba947de50327e5a4105609840170c03afa819821c4a34c346f2d1b43ef287c60c4db2eeb2fe62a4e5e474fa63d6b1af03e562e73c60d1397b29e69b0ef598dcf4601b62bd066c52e13aa673fbb8f6f9b8dd1b89be8ed4eeb0244bb98f1d4449973336cce03cfe5dc381f4ab3afd2ce3fa2b4a5db49bcb576b532f3c9e680a5c83e1f42be083bdee01a21bcbb2450ebd50ee9da566be5a662a07ff77b087f6406b79f10a6f4fd4a964ed00d6ed23586c5d8c3600356232b32e52b0e671e1262e2b35e5493810c7bc78075f1879ce00c0157c88def1ddde3010910fbd162cd05a3c98785361d86196695944a244f2bacf8f86ed065b6e7b200f51527e081365408dc4faeca32f5cc22a93f8e118621ca18f2953fb14966998b84159e5f3c879da9b83aea5254115d9487a45790258caab6bb5ac498b79b96b60a57457b50ea031ab85164d38ce2d4f5812d3585e0e068cda0e74f3cb241b053e4ad424c186ffc78b1dc783f1aee2df5d00082b7c1c52dd9f5b02531a89287c726b8ea1870284c93063a2daa737710d1ab8201f3d7529faaac0e03c0c9e33cea2cfef5e6689955247ac892cf6b8a4424caeb530d319f316f84e077fea04849be60b22a430d22832d31ec8d45319932b6dc08f777b547410b04cbd93dd880154d09c2038d91f7a882d632babf6d8c552f6d53165f4a2c9d2c83482410ba5c6c3ba4d9a3c6563c28197ea3152c21716fa8a1917db964a5b2</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>加密文章</tag>
        <tag>日常生活</tag>
        <tag>心情</tag>
      </tags>
  </entry>
</search>
